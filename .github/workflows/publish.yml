name: Python Package CI/CD

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout nwtk repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Install project dependencies
        run: pip install -e .[test]

      - name: Run tests
        run: pytest tests

  publish-testpypi:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Checkout nwtk repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Upgrade pip and install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build package
        run: hatch build

      - name: Publish to TestPyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: hatch publish testpypi --username __token__ --password ${{ secrets.PYPI_TOKEN }}

  publish-pypi:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Checkout nwtk repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Upgrade pip and install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build package
        run: hatch build

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
        run: hatch publish pypi --username __token__ --password <YOUR_PYPI_TOKEN>
